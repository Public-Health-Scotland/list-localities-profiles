Sub LocalityProfilesMacro()
    Dim file
    Dim path        As String
    path = "\\Isdsf00d03\LIST_analytics\West Hub\02 - Scaled Up Work\RMarkdown\Locality Profiles\Master RMarkdown Document & Render Code\Output\"
    
    file = Dir(path & "*.docx")
    Do While file <> ""
        Documents.Open FileName:=path & file
        
        ' This is the call to the macro you want to run on each file the folder
        Call SetStyleOfAllTablesAndPreserveAlignment
        Selection.HomeKey Unit:=wdStory        'go back to beginning of document
        ' Saves the file
        Call InsertSummaryTable        'Insert summary table and convert pages to landscape
        Call TableOfContents
        Selection.HomeKey Unit:=wdStory        'go back to beginning of document
        Call Cover_Page        'Insert Cover Page
        ' Saves the file
        'Insert Cover Page
        ActiveDocument.TablesOfContents(1).Update
        Call CoverName
        ActiveDocument.Sections.First.PageSetup.DifferentFirstPageHeaderFooter = TRUE
        ActiveDocument.Save
        ActiveDocument.Close
        ' set file to next in Dir
        file = Dir()
    Loop
End Sub

Sub SetStyleOfAllTablesAndPreserveAlignment()
    ' SetStyleOfAllTablesAndPreserveAlignment Macro
    
    For Each objTable In ActiveDocument.Tables
        
        '******This first section is for recording the old column alignments*****'
        numCols = objTable.Columns.Count        'first find the number of columns within the table.
        ReDim oldColumnAlignments(numCols) As Integer        'initialize an integer array of length 'numCols'.
        column_index = 0
        For Each tableColumn In objTable.Columns
            oldColumnAlignments(column_index) = tableColumn.Cells(1).Range.ParagraphFormat.Alignment
            column_index = column_index + 1
        Next tableColumn
        '************************************************************************'
        
        '-------This section changes the styles of the tables to what they should be. -------'
        objTable.Style = "ISD_Pubs_Tables"
        PreviousBookmarkID = objTable.Range.PreviousBookmarkID
        PreviousBookmarkName = ActiveDocument.Range.Bookmarks(PreviousBookmarkID)
        
        If PreviousBookmarkName = "glossary" Then
            objTable.Style = "Glossary_Style"
        End If
        
        If PreviousBookmarkName = "tableA" Then        'Change these as needed for each style type!
        objTable.Style = "TableA_Style"
    End If
    
    If PreviousBookmarkName = "tableB" Then
        objTable.Style = "TableB_Style"
    End If
    
    If PreviousBookmarkName = "tableC" Then
        objTable.Style = "TableC_Style"
    End If
    '------------------------------------------------------------------------------------'
    
    '^^^^This last section sets the alignments of each column of the table to what they were ^^^^'
    '^^^^before the style of the table was changed.^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^'
    i = 0
    For Each tableColumn In objTable.Columns
        tableColumn.Select
        Selection.ParagraphFormat.Alignment = oldColumnAlignments(i)
        i = i + 1
    Next tableColumn
    '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^'
    
    objTable.PreferredWidth = 100        'Sets the Preferred Table width to 100% of the width of the page.
    
Next objTable

End Sub

Sub InsertSummaryTable()
    
    'Identify locality to select correct summary table
    Selection.HomeKey Unit:=wdStory
    Dim Locality    As String
    Locality = ActiveDocument.FullName
    Locality = Left(Locality, InStrRev(Locality, "-") - 1)
    Locality = Right(Locality, Len(Locality) - InStrRev(Locality, "\"))
    Debug.Print "File Extension: " & myOutput
    
    'Insert summary table
    Selection.InsertBreak Type:=wdSectionBreakNextPage
    Selection.InsertFile ("\\stats\LIST_analytics\West Hub\02 - Scaled Up Work\RMarkdown\Locality Profiles\Master RMarkdown Document & Render Code\Output\Summary Tables\" & Locality & "- Summary Table.docx")
    
    'Convert summary table pages to landscape
    Selection.InsertBreak Type:=wdPageBreak
    Selection.InsertBreak Type:=wdSectionBreakNextPage
    Selection.MoveUp Unit:=wdLine, Count:=2
    If Selection.PageSetup.Orientation = wdOrientPortrait Then
        Selection.PageSetup.Orientation = wdOrientLandscape
    Else
        Selection.PageSetup.Orientation = wdOrientPortrait
    End If
    ActiveWindow.ActivePane.SmallScroll Down:=-3
    ActiveWindow.ActivePane.LargeScroll Down:=1
    
End Sub

Sub TableOfContents()
    Selection.HomeKey Unit:=wdStory        'go back to beginning of document
    Selection.TypeParagraph
    MyText = "Table of Contents"
    Selection.TypeText (MyText)
    
    Set MyRange = Selection.Range
    ActiveDocument.TablesOfContents.Add _
                                        Range:=MyRange, _
                                        UseFields:=False, _
                                        UseHeadingStyles:=True, _
                                        LowerHeadingLevel:=3, _
                                        UpperHeadingLevel:=2, _
                                        AddedStyles:="Heading 2, Heading 3"
End Sub

Sub LocalityName()
    Dim Locality    As String
    Locality = ActiveDocument.FullName
    Locality = Left(Locality, InStrRev(Locality, "-") - 1)
    Locality = Right(Locality, Len(Locality) - InStrRev(Locality, "\"))
    Debug.Print "File Extension: " & myOutput
    Selection.TypeText (Locality)
End Sub

Sub CoverName()
    Dim Locality    As String
    Locality = ActiveDocument.FullName
    Locality = Left(Locality, InStrRev(Locality, "-") - 1)
    Locality = Right(Locality, Len(Locality) - InStrRev(Locality, "\"))
    Debug.Print "File Extension: " & myOutput
    
    Dim rngStory    As Range
    For Each rngStory In ActiveDocument.StoryRanges
        With rngStory.Find
            .Text = "[Insert Locality Name]"
            .Replacement.Text = Locality
            .Wrap = wdFindContinue
            .Execute Replace:=wdReplaceAll
        End With
    Next rngStory
    lbl_Exit:
    Exit Sub
    
End Sub

Sub Cover_Page()
    
    Selection.HomeKey Unit:=wdStory
    
    Dim t           As Template, BB As Template
    ' make sure all building blocks are loaded
    Templates.LoadBuildingBlocks
    ' get Building Blocks.dotx as a Template variable
    For Each t In Templates
        If LCase(t.Name) = "building blocks.dotx" Then
            Set BB = t
        End If
    Next
    If Not BB Is Nothing Then
        ' insert the entry
        BB.BuildingBlockEntries("Locality_Profiles_Cover_Page").Insert _
        Where:=Selection.Range, RichText:=True
        
        'Find and replace
        ActiveDocument.BuiltInDocumentProperties("Title") = "Locality Profile"
        
    End If
End Sub
